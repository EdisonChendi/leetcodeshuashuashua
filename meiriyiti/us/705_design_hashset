import unittest
from typing import List
from pprint import pprint


class MyHashSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.size = 100
        self.arr = [None]*self.size

    def add(self, key: int) -> None:
        if not self.contains(key):
            idx = key % self.size
            if self.arr[idx] is None:
                self.arr[idx] = []
            self.arr[idx].append(key)

    def remove(self, key: int) -> None:
        if not self.contains(key):
            return
        self.arr[key % self.size].remove(key)

    def contains(self, key: int) -> bool:
        """
        Returns true if this set contains the specified element
        """
        idx = key % self.size
        if self.arr[idx] is None:
            return False
        return key in self.arr[idx]


# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)

class TestSolution(unittest.TestCase):

    def test_case_1(self):
        sol = Solution()
        pass

    # def test_edge_case_1(self):
    #     sol = Solution()


if __name__ == "__main__":
    unittest.main()
